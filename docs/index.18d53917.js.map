{"mappings":"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","sources":["<anon>","scr/script.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const apiUrls = {\n        arts: \"https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh\",\n        home: \"https://api.nytimes.com/svc/topstories/v2/home.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh\",\n        science: \"https://api.nytimes.com/svc/topstories/v2/science.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh\",\n        us: \"https://api.nytimes.com/svc/topstories/v2/us.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh\",\n        world: \"https://api.nytimes.com/svc/topstories/v2/world.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh\"\n    };\n    const articlesContainer = document.getElementById(\"articles-container\");\n    const categoryHeader = document.getElementById(\"category-header\");\n    const newsTypeContainer = document.getElementById(\"news-type-container\");\n    const loadingScreen = document.getElementById(\"loading-screen\");\n    let currentCategory = \"all\"; // Default category\n    let displayedArticleIds = new Set();\n    let loadingTimeout;\n    async function fetchArticles(category) {\n        setLoadingScreen(true);\n        if (loadingTimeout) clearTimeout(loadingTimeout);\n        try {\n            let url = apiUrls[category];\n            if (!url) {\n                // If no category, fetch from all endpoints\n                const [artsResponse, homeResponse, scienceResponse, usResponse, worldResponse] = await Promise.all([\n                    fetch(apiUrls.arts),\n                    fetch(apiUrls.home),\n                    fetch(apiUrls.science),\n                    fetch(apiUrls.us),\n                    fetch(apiUrls.world)\n                ]);\n                if (!artsResponse.ok || !homeResponse.ok || !scienceResponse.ok || !usResponse.ok || !worldResponse.ok) throw new Error(\"Network response was not ok\");\n                const [artsData, homeData, scienceData, usData, worldData] = await Promise.all([\n                    artsResponse.json(),\n                    homeResponse.json(),\n                    scienceResponse.json(),\n                    usResponse.json(),\n                    worldResponse.json()\n                ]);\n                const allArticles = [\n                    ...artsData.results.map((article)=>({\n                            ...article,\n                            category: \"Arts\"\n                        })),\n                    ...homeData.results.map((article)=>({\n                            ...article,\n                            category: \"Home\"\n                        })),\n                    ...scienceData.results.map((article)=>({\n                            ...article,\n                            category: \"Science\"\n                        })),\n                    ...usData.results.map((article)=>({\n                            ...article,\n                            category: \"US\"\n                        })),\n                    ...worldData.results.map((article)=>({\n                            ...article,\n                            category: \"World\"\n                        }))\n                ];\n                // Filter out articles older than 3 days\n                const recentArticles = filterRecentArticles(allArticles);\n                // Sort articles by their publication date\n                recentArticles.sort((a, b)=>new Date(b.published_date) - new Date(a.published_date));\n                // Display unique articles\n                displayArticles(recentArticles, \"All News\", true);\n            } else {\n                const response = await fetch(url);\n                if (!response.ok) throw new Error(\"Network response was not ok\");\n                const data = await response.json();\n                // Filter out articles older than 3 days\n                const recentArticles = filterRecentArticles(data.results.map((article)=>({\n                        ...article,\n                        category: category.charAt(0).toUpperCase() + category.slice(1)\n                    })));\n                // Sort articles by their publication date\n                recentArticles.sort((a, b)=>new Date(b.published_date) - new Date(a.published_date));\n                // Display unique articles\n                displayArticles(recentArticles, category.charAt(0).toUpperCase() + category.slice(1) + \" News\", false);\n            }\n        } catch (error) {\n            console.error(\"Error fetching articles:\", error);\n        } finally{\n            // Delay hiding the loading screen\n            loadingTimeout = setTimeout(()=>setLoadingScreen(false), 500);\n        }\n    }\n    function filterRecentArticles(articles) {\n        const twoDaysAgo = new Date();\n        twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);\n        return articles.filter((article)=>new Date(article.published_date) >= twoDaysAgo);\n    }\n    function displayArticles(articles, headerText, showNewsType) {\n        articlesContainer.innerHTML = \"\";\n        if (currentCategory === \"all\") {\n            // Add the category header only for \"All\" category\n            categoryHeader.innerHTML = `Showing: ${headerText} - Includes all news categories`;\n            // Show the news type container only for \"All News\"\n            newsTypeContainer.style.display = \"block\";\n        } else {\n            categoryHeader.textContent = `Showing: ${headerText}`;\n            // Hide the news type container for specific categories\n            newsTypeContainer.innerHTML = \"\";\n        }\n        articles.forEach((article)=>{\n            // Prevent displaying duplicate articles\n            if (!displayedArticleIds.has(article.url)) {\n                displayedArticleIds.add(article.url);\n                const imageUrl = article.multimedia && article.multimedia.length > 0 ? article.multimedia[0].url : \"https://res.cloudinary.com/drkmgpcad/image/upload/v1726764310/uukdof1c6mw5osxtniwt.png\";\n                const articleElement = document.createElement(\"div\");\n                articleElement.classList.add(\"article\");\n                articleElement.innerHTML = `\r\n                    <img src=\"${imageUrl}\" alt=\"${article.title}\">\r\n                    <h2>${article.title}</h2>\r\n                    <p>${article.abstract}</p>\r\n                    <p><strong>Published on:</strong> ${new Date(article.published_date).toLocaleDateString()}</p>\r\n                    <p><strong>Category:</strong> ${article.category || \"N/A\"}</p>\r\n                    <a href=\"${article.url}\" target=\"_blank\">Read more</a>\r\n                `;\n                articlesContainer.appendChild(articleElement);\n            }\n        });\n    }\n    function setLoadingScreen(isLoading) {\n        if (isLoading) loadingScreen.style.display = \"flex\"; // Show loading screen\n        else loadingScreen.style.display = \"none\"; // Hide loading screen\n    }\n    function updateArticles() {\n        displayedArticleIds.clear(); // Clear displayed articles when category changes\n        fetchArticles(currentCategory);\n    }\n    // Add event listeners to buttons\n    document.getElementById(\"all-btn\").addEventListener(\"click\", ()=>{\n        currentCategory = \"all\";\n        updateArticles();\n    });\n    document.getElementById(\"arts-btn\").addEventListener(\"click\", ()=>{\n        currentCategory = \"arts\";\n        updateArticles();\n    });\n    document.getElementById(\"home-btn\").addEventListener(\"click\", ()=>{\n        currentCategory = \"home\";\n        updateArticles();\n    });\n    document.getElementById(\"science-btn\").addEventListener(\"click\", ()=>{\n        currentCategory = \"science\";\n        updateArticles();\n    });\n    document.getElementById(\"us-btn\").addEventListener(\"click\", ()=>{\n        currentCategory = \"us\";\n        updateArticles();\n    });\n    document.getElementById(\"world-btn\").addEventListener(\"click\", ()=>{\n        currentCategory = \"world\";\n        updateArticles();\n    });\n    const backToTopButton = document.getElementById(\"back-to-top\");\n    window.addEventListener(\"scroll\", ()=>{\n        if (window.scrollY > 300) backToTopButton.style.display = \"block\";\n        else backToTopButton.style.display = \"none\";\n    });\n    backToTopButton.addEventListener(\"click\", ()=>{\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    });\n    updateArticles();\n});\n\n//# sourceMappingURL=index.18d53917.js.map\n","\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const apiUrls = {\r\n        arts: 'https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh',\r\n        home: 'https://api.nytimes.com/svc/topstories/v2/home.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh',\r\n        science: 'https://api.nytimes.com/svc/topstories/v2/science.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh',\r\n        us: 'https://api.nytimes.com/svc/topstories/v2/us.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh',\r\n        world: 'https://api.nytimes.com/svc/topstories/v2/world.json?api-key=NSezIK2lYefggLc6W3MYCn1nw4pJnuyh'\r\n    };\r\n   \r\n    const articlesContainer = document.getElementById('articles-container');\r\n    const categoryHeader = document.getElementById('category-header');\r\n    const newsTypeContainer = document.getElementById('news-type-container');\r\n    const loadingScreen = document.getElementById('loading-screen');\r\n    let currentCategory = 'all'; // Default category\r\n\r\n    let displayedArticleIds = new Set(); \r\n    let loadingTimeout; \r\n\r\n    async function fetchArticles(category) {\r\n        setLoadingScreen(true);\r\n\r\n                if (loadingTimeout) {\r\n            clearTimeout(loadingTimeout);\r\n        }\r\n\r\n        try {\r\n            let url = apiUrls[category];\r\n            if (!url) {\r\n                // If no category, fetch from all endpoints\r\n                const [artsResponse, homeResponse, scienceResponse, usResponse, worldResponse] = await Promise.all([\r\n                    fetch(apiUrls.arts),\r\n                    fetch(apiUrls.home),\r\n                    fetch(apiUrls.science),\r\n                    fetch(apiUrls.us),\r\n                    fetch(apiUrls.world)\r\n                ]);\r\n\r\n                if (!artsResponse.ok || !homeResponse.ok || !scienceResponse.ok || !usResponse.ok || !worldResponse.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const [artsData, homeData, scienceData, usData, worldData] = await Promise.all([\r\n                    artsResponse.json(),\r\n                    homeResponse.json(),\r\n                    scienceResponse.json(),\r\n                    usResponse.json(),\r\n                    worldResponse.json()\r\n                ]);\r\n\r\n                const allArticles = [\r\n                    ...artsData.results.map(article => ({ ...article, category: 'Arts' })),\r\n                    ...homeData.results.map(article => ({ ...article, category: 'Home' })),\r\n                    ...scienceData.results.map(article => ({ ...article, category: 'Science' })),\r\n                    ...usData.results.map(article => ({ ...article, category: 'US' })),\r\n                    ...worldData.results.map(article => ({ ...article, category: 'World' }))\r\n                ];\r\n\r\n                // Filter out articles older than 3 days\r\n                const recentArticles = filterRecentArticles(allArticles);\r\n\r\n                // Sort articles by their publication date\r\n                recentArticles.sort((a, b) => new Date(b.published_date) - new Date(a.published_date));\r\n\r\n                // Display unique articles\r\n                displayArticles(recentArticles, 'All News', true);\r\n            } else {\r\n                const response = await fetch(url);\r\n                if (!response.ok) throw new Error('Network response was not ok');\r\n                const data = await response.json();\r\n\r\n                // Filter out articles older than 3 days\r\n                const recentArticles = filterRecentArticles(\r\n                    data.results.map(article => ({\r\n                        ...article,\r\n                        category: category.charAt(0).toUpperCase() + category.slice(1)\r\n                    }))\r\n                );\r\n\r\n                // Sort articles by their publication date\r\n                recentArticles.sort((a, b) => new Date(b.published_date) - new Date(a.published_date));\r\n\r\n                // Display unique articles\r\n                displayArticles(recentArticles, category.charAt(0).toUpperCase() + category.slice(1) + ' News', false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching articles:', error);\r\n        } finally {\r\n            // Delay hiding the loading screen\r\n            loadingTimeout = setTimeout(() => setLoadingScreen(false), 500);\r\n        }\r\n    }\r\n\r\n    function filterRecentArticles(articles) {\r\n        const twoDaysAgo = new Date();\r\n        twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);\r\n\r\n        return articles.filter(article => new Date(article.published_date) >= twoDaysAgo);\r\n    }\r\n\r\n    function displayArticles(articles, headerText, showNewsType) {\r\n        articlesContainer.innerHTML = '';\r\n\r\n        if (currentCategory === 'all') {\r\n            // Add the category header only for \"All\" category\r\n            categoryHeader.innerHTML = `Showing: ${headerText} - Includes all news categories`;\r\n            // Show the news type container only for \"All News\"\r\n            newsTypeContainer.style.display = 'block';\r\n        } else {\r\n            categoryHeader.textContent = `Showing: ${headerText}`;\r\n            // Hide the news type container for specific categories\r\n            newsTypeContainer.innerHTML = '';\r\n        }\r\n\r\n        articles.forEach(article => {\r\n            // Prevent displaying duplicate articles\r\n            if (!displayedArticleIds.has(article.url)) {\r\n                displayedArticleIds.add(article.url);\r\n\r\n                const imageUrl = article.multimedia && article.multimedia.length > 0 \r\n                    ? article.multimedia[0].url \r\n                    : 'https://res.cloudinary.com/drkmgpcad/image/upload/v1726764310/uukdof1c6mw5osxtniwt.png';\r\n\r\n                const articleElement = document.createElement('div');\r\n                articleElement.classList.add('article');\r\n                articleElement.innerHTML = `\r\n                    <img src=\"${imageUrl}\" alt=\"${article.title}\">\r\n                    <h2>${article.title}</h2>\r\n                    <p>${article.abstract}</p>\r\n                    <p><strong>Published on:</strong> ${new Date(article.published_date).toLocaleDateString()}</p>\r\n                    <p><strong>Category:</strong> ${article.category || 'N/A'}</p>\r\n                    <a href=\"${article.url}\" target=\"_blank\">Read more</a>\r\n                `;\r\n                articlesContainer.appendChild(articleElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    function setLoadingScreen(isLoading) {\r\n        if (isLoading) {\r\n            loadingScreen.style.display = 'flex'; // Show loading screen\r\n        } else {\r\n            loadingScreen.style.display = 'none'; // Hide loading screen\r\n        }\r\n    }\r\n\r\n    function updateArticles() {\r\n        displayedArticleIds.clear(); // Clear displayed articles when category changes\r\n        fetchArticles(currentCategory);\r\n    }\r\n\r\n    // Add event listeners to buttons\r\n    document.getElementById('all-btn').addEventListener('click', () => {\r\n        currentCategory = 'all';\r\n        updateArticles();\r\n    });\r\n    document.getElementById('arts-btn').addEventListener('click', () => {\r\n        currentCategory = 'arts';\r\n        updateArticles();\r\n    });\r\n    document.getElementById('home-btn').addEventListener('click', () => {\r\n        currentCategory = 'home';\r\n        updateArticles();\r\n    });\r\n    document.getElementById('science-btn').addEventListener('click', () => {\r\n        currentCategory = 'science';\r\n        updateArticles();\r\n    });\r\n    document.getElementById('us-btn').addEventListener('click', () => {\r\n        currentCategory = 'us';\r\n        updateArticles();\r\n    });\r\n    document.getElementById('world-btn').addEventListener('click', () => {\r\n        currentCategory = 'world';\r\n        updateArticles();\r\n    });\r\n\r\n    const backToTopButton = document.getElementById('back-to-top');\r\n\r\n\r\n    window.addEventListener('scroll', () => {\r\n        if (window.scrollY > 300) { // Show button after scrolling down 300px\r\n            backToTopButton.style.display = 'block';\r\n        } else {\r\n            backToTopButton.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    backToTopButton.addEventListener('click', () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    });\r\n\r\n    updateArticles();\r\n\r\n});"],"names":["document","addEventListener","loadingTimeout","apiUrls","arts","home","science","us","world","articlesContainer","getElementById","categoryHeader","newsTypeContainer","loadingScreen","currentCategory","displayedArticleIds","Set","fetchArticles","category","setLoadingScreen","clearTimeout","url","response","fetch","ok","Error","data","json","recentArticles","filterRecentArticles","results","map","article","charAt","toUpperCase","slice","sort","a","b","Date","published_date","displayArticles","artsResponse","homeResponse","scienceResponse","usResponse","worldResponse","Promise","all","artsData","homeData","scienceData","usData","worldData","allArticles","error","console","setTimeout","articles","twoDaysAgo","setDate","getDate","filter","headerText","showNewsType","innerHTML","style","display","textContent","forEach","has","add","imageUrl","multimedia","length","articleElement","createElement","classList","title","abstract","toLocaleDateString","appendChild","isLoading","updateArticles","clear","backToTopButton","window","scrollY","scrollTo","top","behavior"],"version":3,"file":"index.18d53917.js.map"}